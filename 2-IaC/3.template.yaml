AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: DevOps Example 2

Parameters:
  ServiceName:
    Type: String
    Default: devops-example
    Description: The service name.
  Env:
    Type: String
    Description: The environment name. e.g. dev, prod.

Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        SERVICE_NAME: !Ref ServiceName
        ENV: !Ref Env
        REGION: !Ref AWS::Region

Resources:
  JobInitQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Sub "${Env}InitQueue"
      VisibilityTimeout: 30
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt: [ JobInitDLQ, Arn ]
        maxReceiveCount: 5

  JobInitDLQ:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Sub "${Env}InitDLQ"
      VisibilityTimeout: 30

  JobInitDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Job init DLQ has messages"
      Namespace: "AWS/SQS"
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            !GetAtt JobInitDLQ.QueueName
      Statistic: Sum
      Period: 300
      Threshold: 0
      EvaluationPeriods: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref AlarmSNSTopic
      OKActions:
        - !Ref AlarmSNSTopic
      TreatMissingData: missing

  AlarmSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: steve@gmail.com
          Protocol: email
