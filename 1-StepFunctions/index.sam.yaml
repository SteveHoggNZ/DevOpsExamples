AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Step Function Examples

Parameters:
  ServiceName:
    Type: String
    Default: sf-examples
    Description: The service name.
  Env:
    Type: String
    Description: The environment name. e.g. dev, prod.

Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        SERVICE_NAME: !Ref ServiceName
        ENV: !Ref Env
        REGION: !Ref AWS::Region

Resources:
  LambdaServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  GetWelcome:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./build/package.zip
      Handler: src/handler.getWelcome
      Role: !GetAtt LambdaServiceRole.Arn

  GetWelcomeEndpoint:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./build/package.zip
      Handler: src/handler.getWelcomeHttp
      Role: !GetAtt LambdaServiceRole.Arn
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: '/welcome'
            Method: get

Outputs:
  LambdaServiceRole:
    Value:
      !GetAtt LambdaServiceRole.Arn
    Export:
      Name:
        !Sub ${ServiceName}-${Env}-LambdaServiceRole
  GetWelcome:
    Value:
      !GetAtt GetWelcome.Arn
    Export:
      Name:
        !Sub ${ServiceName}-${Env}-GetWelcome
