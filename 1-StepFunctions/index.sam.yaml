AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Step Function Examples

Parameters:
  ServiceName:
    Type: String
    Default: sf-examples
    Description: The service name.
  Env:
    Type: String
    Description: The environment name. e.g. dev, prod.

Globals:
  Function:
    Runtime: nodejs8.10
    Timeout: 30
    MemorySize: 128
    Environment:
      Variables:
        SERVICE_NAME: !Ref ServiceName
        ENV: !Ref Env
        REGION: !Ref AWS::Region

Resources:
  WakeStack2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: 2-wake.sam.yaml
      Parameters:
        ServiceName: !Ref ServiceName
        Env: !Ref Env
        StateMachineRoleArn: !GetAtt StateMachineRole.Arn

  StatesPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
            - states:DescribeExecution
            - states:StartExecution
          Resource: "*"

  LambdaServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !Ref StatesPolicy

  GetWelcome:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./build/package.zip
      Handler: src/handler.getWelcome
      Role: !GetAtt LambdaServiceRole.Arn

  GetWelcomeEndpoint:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./build/package.zip
      Handler: src/handler.getWelcomeHttp
      Role: !GetAtt LambdaServiceRole.Arn
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: '/welcome/direct'
            Method: get

  GetWelcomeWithRetry:
    Type: "AWS::Serverless::Function"
    Properties:
      CodeUri: ./build/package.zip
      Handler: src/handler.getWelcomeWithRetry
      Role: !GetAtt LambdaServiceRole.Arn
      Events:
        HttpPost:
          Type: Api
          Properties:
            Path: '/welcome/retry'
            Method: get
      Environment:
        Variables:
          WELCOME_STATE_MACHINE: !Ref WelcomeStateMachine
          WELCOME_RETRY_STATE_MACHINE: !Ref WelcomeRetryStateMachine

  StateMachineRole:
      Type: "AWS::IAM::Role"
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  !Sub "states.${AWS::Region}.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: WelcomeStateMachinePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "lambda:InvokeFunction"
                  Resource: "*"

  MyActivity:
    Type: "AWS::StepFunctions::Activity"
    Properties:
      Name: !Sub ${Env}MyActivity

  MyActivityStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      Fn::Transform:
        Name: AWS::Include
        Parameters:
          Location: ./statemachines/myActivityTask.yaml

  WelcomeStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      Fn::Transform:
        Name: AWS::Include
        Parameters:
          Location: ./statemachines/welcome.yaml

  WelcomeRetryStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      Fn::Transform:
        Name: AWS::Include
        Parameters:
          Location: ./statemachines/welcomeRetry.yaml

  WelcomeTryCatchStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      Fn::Transform:
        Name: AWS::Include
        Parameters:
          Location: ./statemachines/welcomeTryCatch.yaml

  WelcomeTryCatchBulkStateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      Fn::Transform:
        Name: AWS::Include
        Parameters:
          Location: ./statemachines/welcomeTryCatchBulk.yaml

Outputs:
  LambdaServiceRole:
    Value:
      !GetAtt LambdaServiceRole.Arn
    Export:
      Name:
        !Sub ${ServiceName}-${Env}-LambdaServiceRole
  GetWelcome:
    Value:
      !GetAtt GetWelcome.Arn
    Export:
      Name:
        !Sub ${ServiceName}-${Env}-GetWelcome
